[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quartoCourseBlog",
    "section": "",
    "text": "My First post - Small Scale SSH Server\n\n\n\nR Programming\n\nData Visualization\n\nCybersecurity\n\n\n\n\n\n\n\n\n\nAug 7, 2025\n\n\nYoz Calderon\n\n\n\n\n\n\n\n\n\n\n\n\nExample assignment\n\n\n\ngoals\n\ngeneral\n\n\n\n\n\n\n\n\n\nOct 21, 2022\n\n\nMatt Crump\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/my_first_post/index.html",
    "href": "posts/my_first_post/index.html",
    "title": "My First post - Small Scale SSH Server",
    "section": "",
    "text": "My primary research questions are:\n1.     Do malicious login attempts follow predictable time-based patterns?\n2.     Do these attack patterns vary based on their geographical origin?\n3.     How will knowing this further our understanding of cybersecurity?\nThese questions are important because they shift cybersecurity from àpurely reactive stance to a more proactive one. Being able to identify when and from where attacks are mostly spawning from, organizations can increase their defensive resources, anticipate threats, and gain more knowledge on patterns on a global scale.\nPredictions\nI predict that the attacks will follow a pattern and there will be a clear relationship between time and attack frequency, that there will be more of a cluster at specific times.\nWhat is the data source you will use to help you answer your question(s)?\nI will use a public dataset of logs from a SSH honeypot server, which captured real-world malicious login attempts.\nApproach\nData set\n\nWhat is the source? The data is from a public Kaggle dataset named “SSH Brute-Force IP/User/Password,” containing logs generated by a SSH honeypot server.\nHow was the data collected? A honeypot—a decoy computer system—was intentionally exposed to the internet. The system was designed to attract and log all connection and login attempts made by automated bots and human attackers, capturing the details of their methods without risking a real system. There were other attempts not included here, which broadly fell into two categories: attempts with a key, and attempts that entered no username or password. This dataset only includes attempts using password authentication.\nWhat are the variables included? The key variables are timestamp (when the attempt occurred), foreign_ip (the attacker’s source IP address), username, and passwords (the credentials used in the attempt).\nHow many records/rows/participants? The dataset contains approximately 14,800 individual login attempts.\nAny other relevant information: The data is structured in a JSON format. To answer my research question, I will also use the external MaxMind GeoLite2 database to convert the attacker IP addresses into their country of origin.\n\nTools I will use R and RStudio running on Posit.Cloud for the analysis. Specific R packages will include:\n\njsonlite to load the JSON data.\ndplyr for data cleaning and transformation.\nlubridate to parse and manipulate timestamps.\nrgeolocate to map IP addresses to countries.\nggplot2 to create all data visualizations.\n\nApproach/Predictions\nHow, specifically, will you assess your question(s)?\n\nI will examine the relationship between attack frequency and time by transforming the timestamp variable into hour_of_day and day_of_week and visualizing the counts in a heatmap.\nAfter converting the foreign_ip variable into a country variable, I will filter for the top 10 attacking countries and create faceted plots to visually compare their distinct hourly attack distributions.\n\nRepeat your predictions, but with more specificity.\n\nI predict that the heatmap will show that the number of attacks in the peak hour of activity will be at least 5 times greater than the number of attacks in the lowest hour of activity.\nI predict that when comparing the hourly attack patterns of the top two source countries, their primary peak activity hours will differ by at least 4 hours, indicating distinct operational schedules.\n\nResults\nThe analysis of the SSH honeypot logs yielded clear answers to the primary research questions, revealing distinct patterns in attack timing and origin.\nTime Based Patterns\nThe first research question asked if malicious login attempts follow predictable time-based patterns. The data confirms that they do. As shown in the heatmap below, attack frequency is not random but is heavily concentrated on specific days and times.\nActivity was primarily clustered between Sunday and Wednesday, with a smaller, distinct block of attacks occurring on Saturday evening. Notably, there was a complete absence of logged attempts on Thursday and Friday, suggesting a non-continuous, scheduled nature for the attacks targeting this server.\nMy first prediction—that the peak hour’s attack count would be at least 5 times greater than the lowest hour’s—was not supported. The peak hour of activity saw approximately 900 attacks (driven by the source detailed below), while the lowest hour of consistent activity had roughly 300 attacks. This represents a threefold difference, which is significant but falls short of the predicted 5x magnitude.\nGeographical Variation in Attack Patterns\nThe second research question asked if these patterns vary by geographical origin. The results show a dramatic variation. The source of attacks was found to be extremely concentrated, with China accounting for 14,028 (98.6%) of all attempts. This volume completely dwarfs the second-highest source, the United States, which registered only 124 attempts.\nThis dominance is also reflected in the hourly patterns. The plots below illustrate a contrast between the activity from China and that of other nations.\nThe pattern from China is a high-volume, persistent barrage, with hundreds of attacks occurring in any given hour. In contrast, the patterns from all other top countries are characterized by low-volume, sporadic attempts that rarely exceed 15 attacks per hour.\nMy second prediction—that the peak activity hours of the top two source countries would differ by at least 4 hours—was not supported. China exhibited multiple peaks, with a prominent one around hour 3. The United States showed a small peak around hour 5. This 2-hour difference did not meet the predicted 4-hour gap. The overwhelming volume from the top source makes a direct comparison of “operational schedules” with the much smaller secondary sources less meaningful.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey Figure\nFigure 1. Heatmap showcasing the attack frequency during a certain each day at a specific hour. Somehow there isn’t Thursday or Friday.\nFigure 2. Bar graph showcasing the total number of attacks by country for the top ten countries.\nFigure 3. Distribution of malicious SSH login attempts by hour of the day, broken down by the top ten source countries from Figure 2. Each panel represents a different country, showing its unique 24-hour attack pattern.\nThis investigation set out to determine if malicious SSH login attempts follow predictable time-based and geographical patterns. The analysis of the honeypot data confirms that they do, providing clear, actionable intelligence for strengthening cybersecurity defenses.\nConclusion\nThe answer to both research questions is a definitive yes.\n\nAttacks are not random; they follow a highly structured schedule, concentrated on specific days of the week and hours of the day.\nAttack patterns vary dramatically by origin. The threat landscape for this server was not a diverse global swarm but was dominated by a single, persistent, high-volume campaign from one nation, supplemented by minor, sporadic attacks from a handful of others.\n\nThe failure of the specific predictions does not diminish the overall findings. In fact, it sharpens the conclusion: the primary threat is a relentless, 24-hour operation from a single source, not competing campaigns operating on different schedules.\nThe strategic implication of these findings is profound. Defending against this server’s attackers does not require a generic, one-size-fits-all approach. Instead, a highly targeted, proactive strategy is possible:\n\nTargeted Defense: Given that 98.6% of attacks originate from a single country, implementing geo-blocking is the single most effective defensive action that could be taken.\nEfficient Resource Allocation: Security teams can heighten monitoring and adjust firewall scrutiny during the identified peak windows (Sunday-Wednesday) to catch anomalies more effectively.\n\nIt is important to acknowledge the limitations of this study. The findings are based on a single honeypot server and may not be generalizable to the entire internet. Furthermore, the complete absence of attacks on Thursday and Friday warrants further investigation with a longer-term dataset to determine if this is a consistent operational pause or an artifact of the data collection period."
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "This is a template for using quarto to create a course blog. A course blog can be used in many ways to engage with course content. For example, you could use the blog to post assignments, or to dive more deeply into course material that interests you. By the end of the course, your blog can serve as a portfolio of ways that you engaged in the material. By learning how to use quarto for your blog, you will also be learning new skills for creating and sharing reproducible documents that could be useful to you in the future.\nThe purpose of this page is to provide tips and pointers about blogging with quarto. Quarto is simple enough for creating a basic course blog. However, it is also very deep and can be used to create all sorts of documents, from website, to slide decks, and books.\n\n\nMany questions about quarto can be answered from the quarto documentation located at: https://quarto.org.\nIf you are looking for something specific and don’t know where to find it on the website, use the search tool in the top right corner.\n\n\n\n\nTo use this template you will need a Github.com account, and access to R and Rstudio.\nYou can get access by creating a Github.com account, and downloading the necessary open-source software to your machine.\nIt is also possible to use Rstudio in your web-browser, which does not require downloading any software. There are two sets of instructions, one for the downloading approach, and the other for using Rstudio cloud. Scroll to the bottom for instructions on using Rstudio cloud.\n\n\n\nIn order to use this template you will need to install some free open-source software on your computer.\n\nSign up for a free account at https://github.com. This a website for sharing open-source software, but it can also be used to serve your blog as a website for free.\nDownload Github Desktop and install it on your machine. This should install the version control software git on your system, and you can use Github Desktop to easily push your blog from your local computer so that it can be viewed on Github.com.\nDownload R and install it on your machine. R is a programming language capable of many things, and it needs to be on your machine before you can run R Studio.\nDownload R Studio Desktop and install it on your machine. R Studio is called an “IDE” or integrated development environment, that you can use to write your blog with quarto.\n\n\n\n\nOnce you have the software installed, the next step is to create a quarto blog project in R studio. The collection of files in this template is a pre-made quarto blog project that you can modify for your own purposes. You can also make one yourself in Rstudio.\nAssuming you have downloaded this template, and you have installed the above software, then you need to open quartoCourseBlog.Rproj.\n\n\n\n\nTo find out if everything is working, try rendering the blog. Go to the “Build” Tab and press “Render Website”.\n\nAfter the rendering is complete, you should be able to view your blog. It might show up in the viewer pane like this:\n\nAnd if you press the ‘window-with-an-arrow’ button, you can view the website in your default browser. Quarto websites automatically adjust for the size of the window, so it may appear differently in the viewer pane versus the browser.\n\n\n\nAll of the blog posts are located in the posts folder.\n\nTo make a new post, copy an existing post and then modify it. For example, my posts folder currently contains one post, and it is inside the my_first_post folder.\n\nI can copy the folder and make a new one with the same contents from the Rstudio gear-box menu:\n\nI made a folder for a second post called Example_assignment.\n\nThese are the two files inside the folder. The .qmd file is a plain text file where you will write the blog post. This folder can also be used to store other assets you might put in the post, such as pictures.\n\n\n\nTo write a new post, open the .qmd file, edit the text, and then re-render the website. This is what the text in the .qmd file looked like when I copied it.\n\nThe text at the top between the “---” is called YAML, and provides meta-data for your document. This is where you can change the title, date, name, and add keywords if you want.\nThe rest of the document is for the main body of the post. For example, I changed the text to read:\n\n\n\n\n\nRender the website from the build tab again to see your new post.\n\n\n\nTo share your blog online you will have to publish it on a server that can be accessed by other people on the internet. There are multiple ways to do this step, and I recommend using Github pages. You can view more in-depth instructions from quarto here https://quarto.org/docs/publishing/github-pages.html.\nHere are the steps:\n\nOpen Github Desktop\nGo to preferences and sign in to your Github.com account\n“Add” your blog project folder to Github Desktop\nThere should be an option for a commit message, write a note in there like “first commit”.\nPublish to github.com and uncheck private repository so that other people will be able to see your repository.\nYou should now be able to see your new repository in your github.com profile, which means you should be able to see a copy of your blog files in the repository.\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder.\nAccess the blog from the url generated by the github pages settings page.\n\n\n\n\nWhenever you make changes to your blog project that you want to share online follow these steps:\n\nMake changes to your blog, like writing a new post, or editing an old one.\nRender the website in R-studio. What you see here should be what you will see later on Github.com\nOpen Github Desktop and Commit your changes, by writing brief commit title, and pressing commit.\nThen, use Github Desktop to Push your changes to github.com.\nWait half a minute or so, and you should see your new content appear on the website.\n\n\n\n\nI am planning to add a video overview of these steps soon. In the meantime, these instructions may be enough to get started with R studio cloud and github.com.\n\nSign up for a free account with posit cloud here https://posit.cloud/plans/free\nSign up for a free https://github.com account.\nLog in to Github, and search for this repository https://github.com/CrumpLab/quartoCourseBlog.\n\n\nClick the green “Use this template” Button\nThis will make a copy of the template in your github account, it will show up as one of your repositories\nGive your new repository a name\n\n\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder. You should now be able to view the blog from the url given by github pages.\nLog into Posit Cloud\nCreate a New Project, choose “New Project from Git Repository”\n\n\nenter the URL to the github repository you just made\n\n\nLoad the project, and edit/modify the files (see above for examples of creating new posts etc.)\nTo send your changed files back to github.com you need to do a few steps\n\n\nFrom the Git tab: stage your changes, commit your changes, and push your changes using the green up arrow.\nYou will also need to authenticate your git credentials, and allow Rstudio cloud to update your github repository\nIn the terminal run these two lines, but replace with your name and email\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n\nWhen you “push” your changes back to Github using the green up arrow, you will be asked to enter a username and password. You can enter the username for your Github.com account, but your password won’t work. You need to set up a personal access token.\nGo to your github.com profile &gt; settings page. Scroll down, click on “&lt;&gt; Developer Settings”, on the left\nClick on personal access tokens, generate a new token, give it repo access. Save the text somewhere and use it as your github password when pushing from RStudio.\n\n\nAt this point you should be able to work on your blog in Rstudio Cloud, and push your changes to have them updated on github.com, which serves your blog online.\n\n\n\n\nSee this growing list of quarto resources for much, much more:\nhttps://github.com/mcanouil/awesome-quarto"
  },
  {
    "objectID": "readme.html#quarto-documentation",
    "href": "readme.html#quarto-documentation",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Many questions about quarto can be answered from the quarto documentation located at: https://quarto.org.\nIf you are looking for something specific and don’t know where to find it on the website, use the search tool in the top right corner."
  },
  {
    "objectID": "readme.html#using-this-template",
    "href": "readme.html#using-this-template",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "To use this template you will need a Github.com account, and access to R and Rstudio.\nYou can get access by creating a Github.com account, and downloading the necessary open-source software to your machine.\nIt is also possible to use Rstudio in your web-browser, which does not require downloading any software. There are two sets of instructions, one for the downloading approach, and the other for using Rstudio cloud. Scroll to the bottom for instructions on using Rstudio cloud."
  },
  {
    "objectID": "readme.html#downloading-the-free-software",
    "href": "readme.html#downloading-the-free-software",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "In order to use this template you will need to install some free open-source software on your computer.\n\nSign up for a free account at https://github.com. This a website for sharing open-source software, but it can also be used to serve your blog as a website for free.\nDownload Github Desktop and install it on your machine. This should install the version control software git on your system, and you can use Github Desktop to easily push your blog from your local computer so that it can be viewed on Github.com.\nDownload R and install it on your machine. R is a programming language capable of many things, and it needs to be on your machine before you can run R Studio.\nDownload R Studio Desktop and install it on your machine. R Studio is called an “IDE” or integrated development environment, that you can use to write your blog with quarto."
  },
  {
    "objectID": "readme.html#make-a-quarto-blog-project",
    "href": "readme.html#make-a-quarto-blog-project",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Once you have the software installed, the next step is to create a quarto blog project in R studio. The collection of files in this template is a pre-made quarto blog project that you can modify for your own purposes. You can also make one yourself in Rstudio.\nAssuming you have downloaded this template, and you have installed the above software, then you need to open quartoCourseBlog.Rproj."
  },
  {
    "objectID": "readme.html#render-the-blog",
    "href": "readme.html#render-the-blog",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "To find out if everything is working, try rendering the blog. Go to the “Build” Tab and press “Render Website”.\n\nAfter the rendering is complete, you should be able to view your blog. It might show up in the viewer pane like this:\n\nAnd if you press the ‘window-with-an-arrow’ button, you can view the website in your default browser. Quarto websites automatically adjust for the size of the window, so it may appear differently in the viewer pane versus the browser."
  },
  {
    "objectID": "readme.html#make-a-new-blog-post",
    "href": "readme.html#make-a-new-blog-post",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "All of the blog posts are located in the posts folder.\n\nTo make a new post, copy an existing post and then modify it. For example, my posts folder currently contains one post, and it is inside the my_first_post folder.\n\nI can copy the folder and make a new one with the same contents from the Rstudio gear-box menu:\n\nI made a folder for a second post called Example_assignment.\n\nThese are the two files inside the folder. The .qmd file is a plain text file where you will write the blog post. This folder can also be used to store other assets you might put in the post, such as pictures.\n\n\n\nTo write a new post, open the .qmd file, edit the text, and then re-render the website. This is what the text in the .qmd file looked like when I copied it.\n\nThe text at the top between the “---” is called YAML, and provides meta-data for your document. This is where you can change the title, date, name, and add keywords if you want.\nThe rest of the document is for the main body of the post. For example, I changed the text to read:"
  },
  {
    "objectID": "readme.html#re-render-to-see-your-changes",
    "href": "readme.html#re-render-to-see-your-changes",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Render the website from the build tab again to see your new post."
  },
  {
    "objectID": "readme.html#share-your-blog-on-github.com",
    "href": "readme.html#share-your-blog-on-github.com",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "To share your blog online you will have to publish it on a server that can be accessed by other people on the internet. There are multiple ways to do this step, and I recommend using Github pages. You can view more in-depth instructions from quarto here https://quarto.org/docs/publishing/github-pages.html.\nHere are the steps:\n\nOpen Github Desktop\nGo to preferences and sign in to your Github.com account\n“Add” your blog project folder to Github Desktop\nThere should be an option for a commit message, write a note in there like “first commit”.\nPublish to github.com and uncheck private repository so that other people will be able to see your repository.\nYou should now be able to see your new repository in your github.com profile, which means you should be able to see a copy of your blog files in the repository.\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder.\nAccess the blog from the url generated by the github pages settings page."
  },
  {
    "objectID": "readme.html#pushing-new-posts-to-github.com",
    "href": "readme.html#pushing-new-posts-to-github.com",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Whenever you make changes to your blog project that you want to share online follow these steps:\n\nMake changes to your blog, like writing a new post, or editing an old one.\nRender the website in R-studio. What you see here should be what you will see later on Github.com\nOpen Github Desktop and Commit your changes, by writing brief commit title, and pressing commit.\nThen, use Github Desktop to Push your changes to github.com.\nWait half a minute or so, and you should see your new content appear on the website."
  },
  {
    "objectID": "readme.html#posit-cloud-formerly-rstudio-cloud",
    "href": "readme.html#posit-cloud-formerly-rstudio-cloud",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "I am planning to add a video overview of these steps soon. In the meantime, these instructions may be enough to get started with R studio cloud and github.com.\n\nSign up for a free account with posit cloud here https://posit.cloud/plans/free\nSign up for a free https://github.com account.\nLog in to Github, and search for this repository https://github.com/CrumpLab/quartoCourseBlog.\n\n\nClick the green “Use this template” Button\nThis will make a copy of the template in your github account, it will show up as one of your repositories\nGive your new repository a name\n\n\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder. You should now be able to view the blog from the url given by github pages.\nLog into Posit Cloud\nCreate a New Project, choose “New Project from Git Repository”\n\n\nenter the URL to the github repository you just made\n\n\nLoad the project, and edit/modify the files (see above for examples of creating new posts etc.)\nTo send your changed files back to github.com you need to do a few steps\n\n\nFrom the Git tab: stage your changes, commit your changes, and push your changes using the green up arrow.\nYou will also need to authenticate your git credentials, and allow Rstudio cloud to update your github repository\nIn the terminal run these two lines, but replace with your name and email\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n\nWhen you “push” your changes back to Github using the green up arrow, you will be asked to enter a username and password. You can enter the username for your Github.com account, but your password won’t work. You need to set up a personal access token.\nGo to your github.com profile &gt; settings page. Scroll down, click on “&lt;&gt; Developer Settings”, on the left\nClick on personal access tokens, generate a new token, give it repo access. Save the text somewhere and use it as your github password when pushing from RStudio.\n\n\nAt this point you should be able to work on your blog in Rstudio Cloud, and push your changes to have them updated on github.com, which serves your blog online."
  },
  {
    "objectID": "readme.html#more-quarto",
    "href": "readme.html#more-quarto",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "See this growing list of quarto resources for much, much more:\nhttps://github.com/mcanouil/awesome-quarto"
  },
  {
    "objectID": "posts/Example_assignment/index.html",
    "href": "posts/Example_assignment/index.html",
    "title": "Example assignment",
    "section": "",
    "text": "This assignment engages you in the process of introspection. Your task is to use introspection to evaluate and describe your own mental imagery abilities. Attempt to answer the following kinds of questions. What is your mental imagery like? Do you have mental imagery for different kinds of senses? Is your mental imagery vivid and life-like or very different from normal perception? How would you describe your mental imagery?\nYou should write a minimum of 250 words, but feel free to write more. Submit your document on blackboard by the due date."
  },
  {
    "objectID": "posts/Example_assignment/index.html#my-mental-imagery",
    "href": "posts/Example_assignment/index.html#my-mental-imagery",
    "title": "Example assignment",
    "section": "My mental imagery",
    "text": "My mental imagery\nMy mental imagery is like…"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The content on this page is from about.qmd. Edit that file to change how this page looks.\nI wonder where this will show up.\n“About” pages are special quarto template pages, with multiple options: https://quarto.org/docs/websites/website-about.html.\nTry changing the template type from jolla to one of the other options for a different look and feel."
  }
]